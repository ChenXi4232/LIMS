# Generated by Django 5.0.6 on 2024-06-22 01:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BookInfo",
            fields=[
                ("title", models.CharField(max_length=255, verbose_name="书名")),
                ("publisher", models.CharField(max_length=255, verbose_name="出版社")),
                ("description", models.TextField(verbose_name="简介")),
                ("isbn", models.CharField(max_length=20, verbose_name="ISBN")),
                (
                    "cover_image_path",
                    models.CharField(
                        default="/media/figs/default/book_default.jpg",
                        max_length=255,
                        verbose_name="图书封面",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="价格"
                    ),
                ),
                ("category", models.CharField(max_length=100, verbose_name="类别")),
                ("publication_date", models.DateField(verbose_name="出版日期")),
                ("author", models.CharField(max_length=255, verbose_name="作者")),
                (
                    "call_number",
                    models.CharField(
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="索书号",
                    ),
                ),
                (
                    "total_quantity",
                    models.IntegerField(default=0, verbose_name="现有总数"),
                ),
                (
                    "borrowable_quantity",
                    models.IntegerField(default=0, verbose_name="可借阅总数"),
                ),
                (
                    "borrowing_count",
                    models.IntegerField(default=0, verbose_name="借阅总次数"),
                ),
            ],
            options={
                "verbose_name": "图书信息",
                "verbose_name_plural": "图书信息",
                "db_table": "BookInfo",
            },
        ),
        migrations.CreateModel(
            name="BorrowingInfo",
            fields=[
                (
                    "borrowing_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="借阅 ID"
                    ),
                ),
                (
                    "borrowing_date",
                    models.DateField(auto_now_add=True, verbose_name="借阅日期"),
                ),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name="应还日期"),
                ),
                (
                    "return_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="实际还书日期"
                    ),
                ),
                (
                    "reader_card_id",
                    models.CharField(max_length=50, verbose_name="读者证 ID"),
                ),
                ("book_id", models.CharField(max_length=50, verbose_name="图书 ID")),
                (
                    "is_renewed",
                    models.BooleanField(default=False, verbose_name="是否已续借"),
                ),
            ],
            options={
                "verbose_name": "借阅信息",
                "verbose_name_plural": "借阅信息",
                "db_table": "BorrowingInfo",
            },
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                ("name", models.CharField(max_length=255, verbose_name="姓名")),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="联系电话"),
                ),
                ("email", models.EmailField(max_length=100, verbose_name="电子邮件")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "男"), ("F", "女"), ("N", "未知")],
                        max_length=1,
                        verbose_name="性别",
                    ),
                ),
                ("position", models.CharField(max_length=100, verbose_name="职位")),
                (
                    "photo_path",
                    models.CharField(max_length=255, verbose_name="员工照片"),
                ),
                (
                    "Staff_id",
                    models.CharField(
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="员工 ID",
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(auto_now_add=True, verbose_name="入职日期"),
                ),
                ("birth_date", models.DateField(verbose_name="出生日期")),
            ],
            options={
                "verbose_name": "员工",
                "verbose_name_plural": "员工",
                "db_table": "Staff",
            },
        ),
        migrations.CreateModel(
            name="LateFeeInfo",
            fields=[
                (
                    "late_fee_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="违期 ID"
                    ),
                ),
                ("late_days", models.IntegerField(verbose_name="违期天数")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "待处理"),
                            ("Paid", "已支付"),
                            ("Waived", "已免除"),
                        ],
                        default="Pending",
                        max_length=10,
                        verbose_name="处理状态",
                    ),
                ),
                (
                    "fine_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="罚款金额"
                    ),
                ),
                (
                    "reader_card_id",
                    models.CharField(max_length=50, verbose_name="读者证 ID"),
                ),
                ("book_id", models.CharField(max_length=50, verbose_name="图书 ID")),
            ],
            options={
                "verbose_name": "违期信息",
                "verbose_name_plural": "违期信息",
                "db_table": "LateFeeInfo",
            },
        ),
        migrations.CreateModel(
            name="LibraryBranch",
            fields=[
                (
                    "branch_id",
                    models.CharField(
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="分馆 ID",
                    ),
                ),
                (
                    "branch_name",
                    models.CharField(max_length=255, verbose_name="分馆名称"),
                ),
                ("address", models.CharField(max_length=255, verbose_name="地址")),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="联系电话"),
                ),
                ("email", models.EmailField(max_length=100, verbose_name="电子邮件")),
                (
                    "book_number",
                    models.IntegerField(default=0, verbose_name="藏书数量"),
                ),
                (
                    "opening_hours",
                    models.CharField(max_length=255, verbose_name="开馆时间"),
                ),
                (
                    "staff_number",
                    models.IntegerField(default=0, verbose_name="员工数量"),
                ),
            ],
            options={
                "verbose_name": "图书馆分馆",
                "verbose_name_plural": "图书馆分馆",
                "db_table": "LibraryBranch",
            },
        ),
        migrations.CreateModel(
            name="Reader",
            fields=[
                ("name", models.CharField(max_length=255, verbose_name="姓名")),
                ("address", models.CharField(max_length=255, verbose_name="地址")),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="联系电话"),
                ),
                ("email", models.EmailField(max_length=100, verbose_name="电子邮件")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "男"), ("F", "女"), ("N", "未知")],
                        max_length=1,
                        verbose_name="性别",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(auto_now_add=True, verbose_name="注册日期"),
                ),
                ("expiration_date", models.DateField(verbose_name="有效期")),
                (
                    "borrowing_limit",
                    models.IntegerField(default=10, verbose_name="借阅限制"),
                ),
                (
                    "reader_card_photo",
                    models.CharField(max_length=255, verbose_name="读者证照片"),
                ),
                (
                    "reader_card_id",
                    models.CharField(
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="读者证 ID",
                    ),
                ),
                ("date_of_birth", models.DateField(verbose_name="出生日期")),
                (
                    "outstanding_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="欠款金额",
                    ),
                ),
                (
                    "borrowing_count",
                    models.IntegerField(default=0, verbose_name="在借数目"),
                ),
            ],
            options={
                "verbose_name": "读者",
                "verbose_name_plural": "读者",
                "db_table": "Reader",
            },
        ),
        migrations.CreateModel(
            name="ReservationInfo",
            fields=[
                (
                    "reservation_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="预定 ID"
                    ),
                ),
                (
                    "reservation_date",
                    models.DateField(auto_now_add=True, verbose_name="预定日期"),
                ),
                (
                    "pickup_date",
                    models.DateField(blank=True, null=True, verbose_name="取书日期"),
                ),
                (
                    "reader_card_id",
                    models.CharField(max_length=50, verbose_name="读者证 ID"),
                ),
                ("book_id", models.CharField(max_length=50, verbose_name="图书 ID")),
            ],
            options={
                "verbose_name": "预定信息",
                "verbose_name_plural": "预定信息",
                "db_table": "ReservationInfo",
            },
        ),
        migrations.CreateModel(
            name="UserInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "roles",
                    models.CharField(
                        default="Reader", max_length=20, verbose_name="权限"
                    ),
                ),
                (
                    "introduction",
                    models.TextField(max_length=255, verbose_name="个人简介"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户信息",
                "verbose_name_plural": "用户信息",
                "db_table": "UserInfo",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Janitor",
            fields=[
                ("shift", models.CharField(max_length=50, verbose_name="班次")),
                (
                    "responsible_area",
                    models.CharField(max_length=255, verbose_name="负责区域"),
                ),
                (
                    "Staff_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="backend.staff",
                        verbose_name="员工 ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "图书馆清洁人员",
                "verbose_name_plural": "图书馆清洁人员",
                "db_table": "Janitor",
            },
        ),
        migrations.CreateModel(
            name="Librarian",
            fields=[
                (
                    "expertise",
                    models.CharField(max_length=100, verbose_name="专业领域"),
                ),
                (
                    "responsible_area",
                    models.CharField(max_length=255, verbose_name="负责区域"),
                ),
                (
                    "Staff_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="backend.staff",
                        verbose_name="员工 ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "图书管理员",
                "verbose_name_plural": "图书管理员",
                "db_table": "Librarian",
            },
        ),
        migrations.CreateModel(
            name="LibraryDirector",
            fields=[
                (
                    "office_address",
                    models.CharField(max_length=255, verbose_name="办公室地址"),
                ),
                (
                    "Staff_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="backend.staff",
                        verbose_name="员工 ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "图书馆馆长",
                "verbose_name_plural": "图书馆馆长",
                "db_table": "LibraryDirector",
            },
        ),
        migrations.CreateModel(
            name="SecurityGuard",
            fields=[
                (
                    "has_training_certificate",
                    models.BooleanField(verbose_name="安全培训证书"),
                ),
                (
                    "responsible_area",
                    models.CharField(max_length=255, verbose_name="负责区域"),
                ),
                ("shift", models.CharField(max_length=50, verbose_name="班次")),
                (
                    "Staff_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="backend.staff",
                        verbose_name="员工 ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "图书馆安保人员",
                "verbose_name_plural": "图书馆安保人员",
                "db_table": "SecurityGuard",
            },
        ),
        migrations.AddField(
            model_name="staff",
            name="branch_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="backend.librarybranch",
                verbose_name="分馆 ID",
            ),
        ),
        migrations.CreateModel(
            name="ReaderFaculty",
            fields=[
                (
                    "reader_card_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="backend.reader",
                        verbose_name="读者证 ID",
                    ),
                ),
                ("department", models.CharField(max_length=100, verbose_name="部门")),
                (
                    "faculty_id",
                    models.CharField(max_length=50, verbose_name="教职工工号"),
                ),
            ],
            options={
                "verbose_name": "教职工",
                "verbose_name_plural": "教职工",
                "db_table": "ReaderFaculty",
            },
        ),
        migrations.CreateModel(
            name="ReaderStudent",
            fields=[
                (
                    "reader_card_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="backend.reader",
                        verbose_name="读者证 ID",
                    ),
                ),
                ("major", models.CharField(max_length=100, verbose_name="专业")),
                ("student_id", models.CharField(max_length=50, verbose_name="学号")),
            ],
            options={
                "verbose_name": "学生",
                "verbose_name_plural": "学生",
                "db_table": "ReaderStudent",
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "book_id",
                    models.IntegerField(
                        primary_key=True, serialize=False, verbose_name="图书 ID"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("A", "可借阅"),
                            ("B", "已借阅"),
                            ("R", "已预约"),
                            ("BR", "已借阅且已预约"),
                        ],
                        max_length=10,
                        verbose_name="借阅状态",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="入库时间"),
                ),
                (
                    "call_number",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.bookinfo",
                        verbose_name="索书号",
                    ),
                ),
                (
                    "branch_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.librarybranch",
                        verbose_name="馆藏位置",
                    ),
                ),
            ],
            options={
                "verbose_name": "图书",
                "verbose_name_plural": "图书",
                "db_table": "Book",
                "unique_together": {("book_id", "call_number")},
            },
        ),
    ]
